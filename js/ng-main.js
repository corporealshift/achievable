// Generated by CoffeeScript 1.7.1
var CreateTask, QuickCreate, TasksController, app;

app = angular.module('app', ['ngRoute']);

QuickCreate = function($scope) {
  $scope.create = function() {
    return console.log("create new task");
  };
  return $scope.adv_create = function() {
    console.log("adv create new task");
    return this.$parent.adv_create = true;
  };
};

CreateTask = function($scope) {
  return $scope.add_task = function() {
    if (this.$parent.tasks == null) {
      this.$parent.tasks = [];
    }
    if ($scope.difficulty == null) {
      $scope.difficulty = 0;
    }
    this.$parent.tasks.push({
      title: $scope.title,
      due_date: $scope.due_date,
      created: new Date(),
      modified: new Date(),
      description: $scope.description || "",
      points: {
        total: 5 + (2 * +$scope.difficulty),
        base: 5,
        motivation: 0,
        chain: 0
      },
      chain: 1,
      motivation: 0
    });
    return this.$parent.adv_create = false;
  };
};

TasksController = function($scope) {
  $scope.short_description = function() {
    if (this.task.description.length < 75) {
      return this.task.description;
    } else {
      return this.task.description.substr(0, 75) + "...";
    }
  };
  $scope.days_msg = function() {
    var days_msg, days_remaining;
    days_remaining = this.days_remaining();
    if (days_remaining < 0) {
      days_msg = "LATE";
    }
    if (days_remaining === 0) {
      days_msg = "Today";
    }
    if (days_remaining === 1) {
      days_msg = "1 Day";
    }
    if (days_remaining > 1) {
      days_msg = "" + days_remaining + " Days";
    }
    if (days_remaining >= 100) {
      days_msg = "Far";
    }
    return days_msg;
  };
  $scope.days_remaining = function() {
    var remaining;
    remaining = Math.round((this.task.due_date - new Date()) / (1000 * 60 * 60 * 24));
    if (remaining >= 10) {
      remaining = "future";
    }
    return remaining;
  };
  return {
    _date_format: function(date) {
      return [date.getFullYear(), this._pad(date.getMonth() + 1), this._pad(date.getDate())].join('/');
    },
    _pad: function(val) {
      if (val < 10) {
        return "0" + val;
      } else {
        return val;
      }
    }
  };
};
